// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/health": {
            "get": {
                "description": "Returns the health status of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/calculate": {
            "post": {
                "description": "Calculates the optimal pack sizes for a given order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Calculate optimal pack sizes",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CalculatePackSizesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OptimalPackSizesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/packsizes": {
            "post": {
                "description": "Creates new pack sizes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packsizes"
                ],
                "summary": "Create pack sizes",
                "parameters": [
                    {
                        "description": "Pack size details",
                        "name": "packSize",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePackSizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PackSizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates existing pack sizes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packsizes"
                ],
                "summary": "Update pack sizes",
                "parameters": [
                    {
                        "description": "Updated pack size details",
                        "name": "packSize",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePackSizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CalculatePackSizesRequest": {
            "type": "object",
            "required": [
                "order_quantity",
                "product_id"
            ],
            "properties": {
                "order_quantity": {
                    "type": "integer",
                    "minimum": 1
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreatePackSizeRequest": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.OptimalPackSizesResponse": {
            "type": "object",
            "properties": {
                "pack_combination": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PackDetail"
                    }
                },
                "total_items": {
                    "type": "integer"
                },
                "total_packs": {
                    "type": "integer"
                }
            }
        },
        "dto.PackDetail": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.PackSizeResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdatePackSizeRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
